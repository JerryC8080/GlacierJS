"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const error_1 = __importDefault(require("@pnpm/error"));
const find_up_1 = __importDefault(require("find-up"));
const WORKSPACE_DIR_ENV_VAR = 'NPM_CONFIG_WORKSPACE_DIR';
const WORKSPACE_MANIFEST_FILENAME = 'pnpm-workspace.yaml';
async function findWorkspaceDir(cwd) {
    const workspaceManifestDirEnvVar = process.env[WORKSPACE_DIR_ENV_VAR] ?? process.env[WORKSPACE_DIR_ENV_VAR.toLowerCase()];
    const workspaceManifestLocation = workspaceManifestDirEnvVar
        ? path_1.default.join(workspaceManifestDirEnvVar, 'pnpm-workspace.yaml')
        : await (0, find_up_1.default)([WORKSPACE_MANIFEST_FILENAME, 'pnpm-workspace.yml'], { cwd });
    if (workspaceManifestLocation?.endsWith('.yml')) {
        throw new error_1.default('BAD_WORKSPACE_MANIFEST_NAME', `The workspace manifest file should be named "pnpm-workspace.yaml". File found: ${workspaceManifestLocation}`);
    }
    return workspaceManifestLocation && path_1.default.dirname(workspaceManifestLocation);
}
exports.default = findWorkspaceDir;
//# sourceMappingURL=index.js.map