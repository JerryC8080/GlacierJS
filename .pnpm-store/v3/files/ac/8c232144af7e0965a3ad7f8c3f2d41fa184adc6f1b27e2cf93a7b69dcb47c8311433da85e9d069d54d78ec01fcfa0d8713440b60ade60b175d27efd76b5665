"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Rx = __importStar(require("rxjs"));
const operators_1 = require("rxjs/operators");
const COMMANDS_THAT_REPORT_SCOPE = new Set([
    'install',
    'link',
    'prune',
    'rebuild',
    'remove',
    'unlink',
    'update',
    'run',
    'test',
]);
exports.default = (scope$, opts) => {
    if (!COMMANDS_THAT_REPORT_SCOPE.has(opts.cmd)) {
        return Rx.NEVER;
    }
    return scope$.pipe((0, operators_1.take)(1), (0, operators_1.map)((log) => {
        if (log.selected === 1) {
            return Rx.NEVER;
        }
        let msg = 'Scope: ';
        if (log.selected === log.total) {
            msg += `all ${log.total}`;
        }
        else {
            msg += `${log.selected}`;
            if (log.total) {
                msg += ` of ${log.total}`;
            }
        }
        if (log.workspacePrefix) {
            msg += ' workspace projects';
        }
        else {
            msg += ' projects';
        }
        return Rx.of({ msg });
    }));
};
//# sourceMappingURL=reportScope.js.map